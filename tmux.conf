# ref: http://media.pragprog.com/titles/bhtmux3/code/workflows/tmux.conf

# Set the prefix from C-b to M-f
set -g prefix M-f

# Free the original Ctrl-b prefix keybinding
unbind C-b

# Set the delay between prefix and command
set -s escape-time 1

# Ensure that we can send Alt-f to other apps
bind M-f send-prefix

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
set -w -g pane-base-index 1

# Reload the file with Prefix r
bind r \
    source-file ~/.config/tmux/tmux.conf \; \
    display-message " Configuration reloaded "


# Mouse support - set to on if you want to use the mouse
set -g mouse on

# Set the default terminal mode to 256color mode
set -g default-terminal "tmux-256color"

# Override terminal so it displays 32bit RGB color
set -a terminal-overrides ",*256col*:RGB"

# Set colors
if-shell '[ "$(tput colors)" -ge 256 ]' \
    'set -g status-style fg=black; \
     set -g window-status-style fg=black; \
     set -g window-status-current-style fg=black,bg=green; \
     set -g message-style fg=green; \
     set -g mode-style bg=green; \
     set -g menu-selected-style bg=green' \
    ''

# Pane border style: single, double, heavy, simple, number.
set -w -g pane-border-lines single

# Add indicators for two-pane setup
set -g pane-border-indicators arrows

# Status line left side to show Session: [name] [window] [pane]
set -g status-left-length 40
set -g status-left " #S:#I.#P "

# Status line right side -  [date] hh:mm
set -g status-right " [%d] %R "

# Window status remove Symbol
set -g window-status-current-format " #I:#W "
set -g window-status-format " #I:#W "

# Update the status line every sixty seconds
set -g status-interval 60

# Center the window list in the status line
set -g status-justify centre

# Enable vi keys.
set -w -g mode-keys vi

# v in copy mode starts making selection
bind -T copy-mode-vi v send -X begin-selection

# y in copy mode to yank text into system clipboard
if-shell 'uname -r | grep -iq "microsoft"' \
   'set -g copy-command "win32yank.exe -i --crlf"' \
   { \
      if-shell 'uname | grep -q "Darwin"' \
         'set -g copy-command "pbcopy"' \
         { \
            if-shell '[ "$XDG_SESSION_TYPE" = "wayland" ]' \
               'set -g copy-command "wl-copy"' \
               'set -g copy-command "xclip -selection clipboard -in"' \
         }
   }
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "#{copy-command}"

# Make Prefix p paste the buffer.
unbind p
bind p paste-buffer

# Shortcut for synchronize-panes toggle
bind C-s set-window-option synchronize-panes

# Split pane and retain the current directory of existing pane
bind _ split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"

# make session chooser order by name instead of session index
bind s choose-tree -sZ -O name

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
vim_pattern='(\S+/)?g?\.?(view|l?n?vim?x?|fzf)(diff)?(-wrapped)?'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +${vim_pattern}$'"
bind-key -n 'C-h' if-shell "$is_vim" { send-keys C-h } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
bind-key -n 'C-j' if-shell "$is_vim" { send-keys C-j } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
bind-key -n 'C-k' if-shell "$is_vim" { send-keys C-k } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
bind-key -n 'C-l' if-shell "$is_vim" { send-keys C-l } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }

bind-key -T copy-mode-vi 'C-h' if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind-key -T copy-mode-vi 'C-j' if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind-key -T copy-mode-vi 'C-k' if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind-key -T copy-mode-vi 'C-l' if-shell -F '#{pane_at_right}'  {} { select-pane -R }

bind C-l send-keys 'C-l'


bind O display-popup -d "#{pane_current_path}" \
                         -x C -y C -w 90% -h 90% \
                         -e "POPUP=true" -E "$SHELL"
# popup menu
bind e  \
  display-menu -T "Quick Menu" -x C -y C \
    "New Window" n "new-window" \
    "Horizontal Split" - "split-window" \
    "Vertical Split"  | "split-window -h" \
    "Close Pane" x "kill-pane" \
    "Close Session" q "kill-session"
